[{"C:\\Homework P'Em\\my-app\\src\\index.js":"1","C:\\Homework P'Em\\my-app\\src\\App.js":"2","C:\\Homework P'Em\\my-app\\src\\client\\Page\\UpdateTeacher.js":"3","C:\\Homework P'Em\\my-app\\src\\client\\Page\\UpdateStudentError.js":"4","C:\\Homework P'Em\\my-app\\src\\client\\Page\\ShowTeacher.js":"5","C:\\Homework P'Em\\my-app\\src\\client\\Page\\UpdateTeacherr.js":"6","C:\\Homework P'Em\\my-app\\src\\client\\Page\\ShowStudent.js":"7","C:\\Homework P'Em\\my-app\\src\\client\\Page\\UpdateStudent.js":"8","C:\\Homework Coding\\week3\\src\\index.js":"9","C:\\Homework Coding\\week3\\src\\App.js":"10","C:\\Homework Coding\\week3\\src\\client\\Page\\ShowDistrict.js":"11","C:\\Homework Coding\\week3\\src\\client\\Page\\ShowProvince.js":"12","C:\\Homework Coding\\fruit\\fruit_data\\src\\index.js":"13","C:\\Homework Coding\\fruit\\fruit_data\\src\\App.js":"14","C:\\Homework Coding\\fruit\\fruit_data\\src\\client\\Page\\ShowCategory.js":"15","C:\\Homework Coding\\fruit\\fruit_data\\src\\client\\Page\\ShowFruit.js":"16","C:\\Homework Coding\\week4\\src\\index.js":"17","C:\\Homework Coding\\week4\\src\\App.js":"18","C:\\Homework Coding\\week4\\src\\client\\Page\\ShowCategory.js":"19","C:\\Homework Coding\\week4\\src\\client\\Page\\ShowFruit.js":"20"},{"size":293,"mtime":1637489657493,"results":"21","hashOfConfig":"22"},{"size":2061,"mtime":1638821497459,"results":"23","hashOfConfig":"22"},{"size":2805,"mtime":1639413200450,"results":"24","hashOfConfig":"22"},{"size":5489,"mtime":1638821044087,"results":"25","hashOfConfig":"22"},{"size":9323,"mtime":1639492626229,"results":"26","hashOfConfig":"22"},{"size":3303,"mtime":1638820702997,"results":"27","hashOfConfig":"22"},{"size":12047,"mtime":1639490994391,"results":"28","hashOfConfig":"22"},{"size":3408,"mtime":1639407173873,"results":"29","hashOfConfig":"22"},{"size":293,"mtime":1637489657493,"results":"30","hashOfConfig":"31"},{"size":1895,"mtime":1639513074138,"results":"32","hashOfConfig":"31"},{"size":10187,"mtime":1639547868690,"results":"33","hashOfConfig":"31"},{"size":7725,"mtime":1639546925900,"results":"34","hashOfConfig":"31"},{"size":293,"mtime":1637489657493,"results":"35","hashOfConfig":"36"},{"size":1883,"mtime":1639555253152,"results":"37","hashOfConfig":"36"},{"size":7627,"mtime":1639554128740,"results":"38","hashOfConfig":"36"},{"size":11409,"mtime":1639628676950,"results":"39","hashOfConfig":"36"},{"size":293,"mtime":1637489657493,"results":"40","hashOfConfig":"41"},{"size":1883,"mtime":1639555253152,"results":"42","hashOfConfig":"41"},{"size":7627,"mtime":1639554128740,"results":"43","hashOfConfig":"41"},{"size":11407,"mtime":1639647147278,"results":"44","hashOfConfig":"41"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1rm0c93",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1n8c05c",{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"vma0zl",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"14gtnrb",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Homework P'Em\\my-app\\src\\index.js",[],["95","96"],"C:\\Homework P'Em\\my-app\\src\\App.js",["97","98"],"import React from 'react';\nimport './App.css';\nimport ShowStudent from './client/Page/ShowStudent'\nimport ShowTeacher from './client/Page/ShowTeacher'\nimport UpdateStudent from './client/Page/UpdateStudent'\nimport UpdateTeacher from './client/Page/UpdateTeacher'\nimport UpdateStudentError from './client/Page/UpdateStudentError'\nimport UpdateTeacherr from './client/Page/UpdateTeacherr'\nimport { Route } from 'react-router-dom'\nimport { Switch } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <br/>\n      {/* <Button variant=\"contained\" to=\"/\" style={{padding: \"10px\"}}>ShowStudent</Button> */}\n      {/* <Button variant=\"contained\" to=\"/AddStudent\" style={{padding: \"10px\"}}>AddStudent</Button>\n      <Button variant=\"contained\" to=\"/UpdateStudent\" style={{padding: \"10px\"}}>UpdateStudent</Button> */}\n      <Link to=\"/\" style={{padding: \"10px\"}}>ShowStudent</Link>\n      <Link to=\"/ShowTeacher\" style={{padding: \"10px\"}}>ShowTeacher</Link>\n      <Link to=\"/UpdateStudent\" style={{padding: \"10px\"}}>UpdateStudent</Link>\n      {/* <Link to=\"/UpdateTeacherr\" style={{padding: \"10px\"}}>UpdateTeacherr</Link> */}\n      <Link to=\"/UpdateTeacher\" style={{padding: \"10px\"}}>UpdateTeacher</Link>\n     {/* <Link to=\"/UpdateStudentError\" style={{padding: \"10px\"}}>UpdateStudentError</Link> */} \n      {/* <Link to=\"/UpdatTeacher\" style={{padding: \"10px\"}}>UpdateTeacher</Link>\n      <Link to=\"/UpdatTeacherr\" style={{padding: \"10px\"}}>Makham</Link> */}\n    \n      <br/>\n      <br/>\n      <Switch>\n        <Route exact path=\"/\" component={ShowStudent} />\n        <Route exact path=\"/ShowTeacher\" component={ShowTeacher} />\n        <Route exact path=\"/UpdateStudent\" component={UpdateStudent} />\n       {/* <Route exact path=\"/UpdateTeacherr\" component={UpdateTeacherr} />  */}\n       <Route exact path=\"/UpdateTeacher\" component={UpdateTeacher} /> \n       {/*  <Route exact path=\"/UpdateStudentError\" component={UpdateStudentError} />*/}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Homework P'Em\\my-app\\src\\client\\Page\\UpdateTeacher.js",["99","100"],"import Axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from '@mui/material/TextField';\r\n\r\nfunction UpdateTeacher() {\r\n const [newName, setNewName] = useState(\"\");\r\n const [newSubject, setNewSubject] = useState(0);\r\n const [teacherList, setteacherList] = useState([]);\r\n\r\nuseEffect(() => {\r\n    Axios.get(\"http://localhost:3000/teachers\").then((response) => {\r\n      setteacherList(response.data);\r\n    });\r\n  }, []);\r\n\r\n const updateTeacher = (id) => {\r\n    Axios.put(\"http://localhost:3000/teacherss\", {\r\n      teacher_name: newName,\r\n      subject: newSubject,\r\n      id: id,\r\n    }).then((response) => {\r\n      setteacherList(\r\n        teacherList.map((val) => {\r\n          return val.id === id\r\n            ? {\r\n                id: val.id,\r\n                teacher_name: newName,\r\n                subject: newSubject,\r\n              }\r\n            : val;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App container\">\r\n     <h1 class=\"font headsize\">Teacher Data Update</h1>\r\n      <div className=\"teachers\">\r\n        {teacherList.map((val, key) => {\r\n          return (\r\n            \r\n            <div className=\"teacher card\">\r\n              <div className=\"card-body text-left\">\r\n                <p className=\"card-text\">Id: {val.id}</p>\r\n\r\n                <p className=\"card-text\">Name: {val.teacher_name}</p>\r\n                <div className=\"d-flex\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    style={{ width: \"300px\" }}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Teacher\"\r\n                    onChange={(event) => {\r\n                      setNewName(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <p className=\"card-text\">Subject: {val.subject}</p>\r\n                <div className=\"d-flex\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    align=\"center\"\r\n                    style={{ width: \"300px\" }}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Subject\"\r\n                    onChange={(event) => {\r\n                      setNewSubject(event.target.value);\r\n                    }}\r\n                  />\r\n                       &nbsp;&nbsp;&nbsp;\r\n                  <button\r\n                    className=\"btn btn-warning\"\r\n                    onClick={() => {\r\n                      updateTeacher(val.id);\r\n                    }}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n             </div>\r\n            </div>\r\n\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateTeacher;\r\n","C:\\Homework P'Em\\my-app\\src\\client\\Page\\UpdateStudentError.js",["101"],"import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\n\r\nconst UpdateStudentError = () => {\r\n\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newAge, setNewAge] = useState(0);\r\n  const [newTeacherId, setNewTeacherId] = useState(0);\r\n  const [studentList, setStudentList] = useState([]);\r\n\r\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n      fontSize: 14,\r\n    },\r\n  }));\r\n\r\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    \"&:last-child td, &:last-child th\": {\r\n      border: 0,\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3000/students\").then((response) => {\r\n      setStudentList(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const updateStudent = (id) => {\r\n    Axios.put(\"http://localhost:3000/students\", {\r\n      name: newName,\r\n      age: newAge,\r\n      teacher_id: newTeacherId,\r\n      id: id,\r\n    }).then((response) => {\r\n      setStudentList(\r\n        studentList.map((val) => {\r\n          return val.id === id\r\n            ? {\r\n                id: id,\r\n                name: newName,\r\n                age: newAge,\r\n                teacher_id: newTeacherId,\r\n              }\r\n            : val;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const handChangeName = (e) => {\r\n      let value = e.target.value\r\n      let name = e.target.name\r\n      // console.log(\"e.target.value::\",value)\r\n      // console.log(\"e.target.name::\",name)\r\n      // setNewName({...newName,[name]:value})\r\n      setNewName(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3000/students\").then((response) => {\r\n      setStudentList(response.data);\r\n    });\r\n  }, []);\r\n\r\n  console.log(\"studentList\" + studentList);\r\n  console.log(\"studentListname\" + studentList[0]);\r\n  console.log(\"newName\"+newName);\r\n  // console.log(\"rowname\"+row.name);\r\n\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 class=\"font headsize\">Student Data Update</h1>\r\n      <TableContainer component={Paper} style={{ padding: \"20px\" }}>\r\n        <Table sx={{ minWidth: 500 }} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\" fontSize=\"large\" type = \"text\">\r\n                ID\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"left\">NAME</StyledTableCell>\r\n              <StyledTableCell align=\"left\">AGE</StyledTableCell>\r\n              <StyledTableCell align=\"left\">TEACHER ID</StyledTableCell>\r\n              <StyledTableCell align=\"centert\">STATUS</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {studentList.map((row , index) => (\r\n              <StyledTableRow key={row.id}>\r\n                <StyledTableCell  component=\"th\" scope=\"row\" align=\"center\">\r\n                  {row.id}\r\n                </StyledTableCell>\r\n                <div className=\"student card\">\r\n                <StyledTableCell align=\"left\">\r\n                  {row.name}&nbsp;&nbsp;&nbsp;\r\n                  <input \r\n                    style={{ width: \"300px\" }}\r\n                    class = \"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Name\"\r\n                    value = {newName[index]}\r\n                    onChange={handChangeName}\r\n                  />\r\n                </StyledTableCell>\r\n                </div>\r\n\r\n                <StyledTableCell align=\"left\">\r\n                  {row.age}&nbsp;&nbsp;&nbsp;\r\n                  <input\r\n                    class = \"form-control\"\r\n                    style={{ width: \"200px\" }}\r\n                    type=\"number\"\r\n                    align=\"left\"\r\n                    placeholder=\"Enter Age\"\r\n                    onChange={(event) => {\r\n                      setNewAge(event.target.value);\r\n                   }}\r\n                  ></input>\r\n                </StyledTableCell>\r\n\r\n                <StyledTableCell align=\"left\">\r\n                  {row.teacher_id}&nbsp;&nbsp;&nbsp;\r\n                  <input\r\n                    class = \"form-control\"\r\n                    style={{ width: \"200px\" }}\r\n                    type=\"number\"\r\n                    align=\"left\"\r\n                    placeholder=\"Enter Teacherid\"\r\n                    onChange={(event) => {\r\n                      setNewTeacherId(event.target.value);\r\n                   }}\r\n                  ></input>\r\n                </StyledTableCell>\r\n                <br/>\r\n                  <button className=\"btn btn-warning\"  onClick={() => {updateStudent(row.id)}}>Update</button>&nbsp;&nbsp;&nbsp;\r\n\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </React.Fragment>\r\n  );\r\n  \r\n};\r\n\r\nexport default UpdateStudentError;\r\n","C:\\Homework P'Em\\my-app\\src\\client\\Page\\ShowTeacher.js",["102"],"C:\\Homework P'Em\\my-app\\src\\client\\Page\\UpdateTeacherr.js",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import Axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from '@mui/material/TextField';\r\n\r\nfunction UpdateTeacher() {\r\n  const [id, setId] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n  const [subject, setSubject] = useState(0);\r\n  const [teacherId, setTeacherName] = useState(0);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newAge, setNewAge] = useState(0);\r\n  const [newSubject, setNewSubject] = useState(0);\r\n  const [newTeacherId, setNewTeacherId] = useState(0);\r\n  const [teacherList, setTeacherList] = useState([]);\r\n  const [newStudentList, setNewStudentList] = useState([]);\r\n\r\n\r\nuseEffect(() => {\r\n    Axios.get(\"http://localhost:5000/teachers\").then((response) => {\r\n        setTeacherList(response.data);\r\n    });\r\n  }, []);\r\n\r\n\r\n  const update = (id) => {\r\n      console.log(\"1111111111111111111111\");\r\n    Axios.put(\"http://localhost:3000/teacherss\", {\r\n      teacher_name: newName,\r\n      subject: newSubject,\r\n      id: id,\r\n    }).then((response) => {\r\n        console.log(\"2222222222222222\");\r\n        setTeacherList(\r\n        teacherList.map((val) => {\r\n            console.log(\"133333333333333333333\");\r\n          return val.id === id\r\n            ? {\r\n                id: val.id,\r\n                teacher_name: newName,\r\n                subject: newSubject,\r\n              }\r\n            : val;\r\n        })\r\n      );\r\n    });\r\n  };\r\n   return (\r\n    <div className=\"App container\">\r\n     <h1 class=\"font headsize\">Teacher Data Update</h1>\r\n     <div className=\"students\">\r\n       {teacherList.map((val, key) => {\r\n         return (\r\n            <div className=\"student card\">\r\n           <div className=\"card-body text-left\">\r\n                <p className=\"card-text\">Id: {val.id}</p>\r\n\r\n               <p className=\"card-text\">Teacher Name: {val.teacher_name}</p>\r\n               <div className=\"d-flex\">\r\n                   <input\r\n                     className=\"form-control\"\r\n                     style={{ width: \"300px\" }}\r\n                     type=\"text\"\r\n                     placeholder=\"Enter name\"\r\n                     onChange={(event) => {\r\n                       setNewName(event.target.value);\r\n                     }}\r\n                   />\r\n                 </div>\r\n                 <p className=\"card-text\">Subject: {val.subject}</p>\r\n                 <div className=\"d-flex\">\r\n                   <input\r\n                     className=\"form-control\"\r\n                     align=\"center\"\r\n                     style={{ width: \"300px\" }}\r\n                     type=\"text\"\r\n                     placeholder=\"Enter age\"\r\n                     onChange={(event) => {\r\n                       setNewSubject(event.target.value);\r\n                     }}\r\n                   />\r\n                 </div>\r\n                   &nbsp;&nbsp;&nbsp;\r\n                   <button\r\n                     className=\"btn btn-warning\"\r\n                     onClick={() => {\r\n                       update(id)\r\n                     }}\r\n                   >\r\n                     Update\r\n                   </button>\r\n                 \r\n               </div>\r\n             </div>\r\n           );\r\n         })}\r\n       </div>\r\n     </div>\r\n   );\r\n}\r\n\r\nexport default UpdateTeacher;\r\n","C:\\Homework P'Em\\my-app\\src\\client\\Page\\ShowStudent.js",["118"],"C:\\Homework P'Em\\my-app\\src\\client\\Page\\UpdateStudent.js",["119","120"],"import Axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from '@mui/material/TextField';\r\n\r\nfunction UpdateStudent() {\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newAge, setNewAge] = useState(0);\r\n  const [newTeacherId, setNewTeacherId] = useState(0);\r\n  const [studentList, setStudentList] = useState([]);\r\n\r\nuseEffect(() => {\r\n    Axios.get(\"http://localhost:3000/students\").then((response) => {\r\n      setStudentList(response.data);\r\n    });\r\n  }, []);\r\n\r\n\r\n  const updateStudent = (id) => {\r\n    Axios.put(\"http://localhost:3000/students\", {\r\n      name: newName,\r\n      age: newAge,\r\n      teacher_id: newTeacherId,\r\n      id: id,\r\n    }).then((response) => {\r\n      setStudentList(\r\n        studentList.map((val) => {\r\n          return val.id === id\r\n            ? {\r\n                id: val.id,\r\n                name: newName,\r\n                age: newAge,\r\n                teacher_id: newTeacherId,\r\n              }\r\n            : val;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App container\">\r\n     <h1 class=\"font headsize\">Student Data Update</h1>\r\n     \r\n      <div className=\"students\">\r\n        {studentList.map((val, key) => {\r\n          return (\r\n            \r\n            <div className=\"student card\">\r\n              <div className=\"card-body text-left\">\r\n                <p className=\"card-text\">Id: {val.id}</p>\r\n\r\n                <p className=\"card-text\">Name: {val.name}</p>\r\n                <div className=\"d-flex\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    style={{ width: \"300px\" }}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter name\"\r\n                    onChange={(event) => {\r\n                      setNewName(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <p className=\"card-text\">Age: {val.age}</p>\r\n                <div className=\"d-flex\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    align=\"center\"\r\n                    style={{ width: \"300px\" }}\r\n                    type=\"number\"\r\n                    placeholder=\"Enter age\"\r\n                    onChange={(event) => {\r\n                      setNewAge(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <p className=\"card-text\">Teacher id: {val.teacher_id}</p>\r\n                <div className=\"d-flex\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    style={{ width: \"300px\" }}\r\n                    type=\"number\"\r\n                    placeholder=\"Enter teacher id\"\r\n                    onChange={(event) => {\r\n                      setNewTeacherId(event.target.value);\r\n                    }}\r\n                  />\r\n                  <br />\r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <button\r\n                    className=\"btn btn-warning\"\r\n                    onClick={() => {\r\n                      updateStudent(val.id);\r\n                    }}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          );\r\n        })}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateStudent;\r\n","C:\\Homework Coding\\week3\\src\\index.js",[],["121","122"],"C:\\Homework Coding\\week3\\src\\App.js",[],"C:\\Homework Coding\\week3\\src\\client\\Page\\ShowDistrict.js",["123"],"C:\\Homework Coding\\week3\\src\\client\\Page\\ShowProvince.js",["124"],"C:\\Homework Coding\\fruit\\fruit_data\\src\\index.js",[],["125","126"],"C:\\Homework Coding\\fruit\\fruit_data\\src\\App.js",[],"C:\\Homework Coding\\fruit\\fruit_data\\src\\client\\Page\\ShowCategory.js",["127"],"import * as React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst ShowCategory = () => {\r\n  const [id, setId] = useState(0);\r\n  const [type, setTypeName] = useState(\"\");\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [category, setCategory] = useState({}); //เก็บข้อมูลเป็น Object มีหลายตัว\r\n  const [newName, setNewName] = useState(\"\");\r\n  \r\n\r\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n      fontSize: 14,\r\n    },\r\n  }));\r\n\r\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    \"&:last-child td, &:last-child th\": {\r\n      border: 0,\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3000/categorys\").then((response) => {\r\n      setCategoryList(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const addCategory = () => {\r\n    Axios.post(\"http://localhost:3000/categorys\", {\r\n      id: id,\r\n      type: type,\r\n     \r\n    }).then(() => {\r\n      setCategoryList([\r\n        ...categoryList,\r\n        {\r\n          id: id,\r\n          type: type,\r\n         \r\n        },\r\n      ]);\r\n    });\r\n  };\r\n\r\n  const deleteCategory = (id) => {\r\n    Axios.delete(`http://localhost:3000/categorys/${id}`).then((response) => {\r\n      setCategoryList(\r\n        categoryList.filter((val) => {\r\n          return val.id !== id;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  const updateCategory = (id) => {\r\n    Axios.put(\"http://localhost:3000/categoryss\", {\r\n      type: newName,\r\n      id: id,\r\n    }).then((response) => {\r\n      setCategoryList(\r\n        categoryList.map((val) => {\r\n          return val.id === id\r\n            ? {\r\n                id: val.id,\r\n                type: newName,\r\n               \r\n              }\r\n            : val;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    const category = categoryList.find((category) => category.id === id);\r\n    setCategory(category);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 class=\"font headsize\">Category Data</h1>\r\n      <Button\r\n        style={{\r\n          color: \"white\",\r\n          align: \"right\",\r\n          float: \"right\",\r\n          marginRight: \"20px\",\r\n        }}\r\n        variant=\"contained\"\r\n        // onClick={handleClick}\r\n        onClick={(e) => {\r\n          setIsUpdate(false);\r\n          handleClick(e);\r\n        }}\r\n      >\r\n        Add category\r\n      </Button>\r\n      <Popover\r\n        textAlign=\"center\"\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        data-toggle=\"popover\"\r\n        data-placement=\"top\"\r\n        data-content=\"Content\"\r\n        anchorOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        {isUpdate ? \r\n\r\n          <div className=\"teacher card\">\r\n            <div className=\"card-body text-left\">\r\n              <p className=\"card-text\">Id: {category.id}</p>\r\n\r\n              <p className=\"card-text\">Type: {category.type}</p>\r\n              <div className=\"d-flex\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  style={{ width: \"300px\" }}\r\n                  type=\"text\"\r\n                 // placeholder=\"Enter Teacher\"\r\n                  defaultValue = {category.type}\r\n                  onChange={(event) => {\r\n                    setNewName(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n             \r\n              <div className=\"d-flex\">\r\n               \r\n                &nbsp;&nbsp;&nbsp;\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  onClick={(e) => {\r\n                    updateCategory(category.id);\r\n                    handleClose(e);\r\n                  }}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n         : \r\n          <Typography sx={{ p: 25 }} textAlign=\"center\">\r\n            <form action=\"\">\r\n              <div className=\"mb-3 text-left\">\r\n                <label className=\"form-label\" htmlFor=\"name\">\r\n                  Category Name:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter name\"\r\n                  onChange={(event) => {\r\n                    setTypeName(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n             \r\n              <button className=\"btn btn-success\" onClick={addCategory}>\r\n                Save\r\n              </button>\r\n            </form>\r\n          </Typography>\r\n        }\r\n      </Popover>\r\n\r\n      <TableContainer component={Paper} style={{ padding: \"20px\" }}>\r\n        <Table sx={{ minWidth: 500 }} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\" fontSize=\"large\">\r\n                ID\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\">CATEGORY NAME</StyledTableCell>\r\n              <StyledTableCell align=\"center\">STATUS</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categoryList.map((row) => (\r\n              <StyledTableRow key={row.id}>\r\n                \r\n                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                  {row.id}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\">\r\n                  {row.type}\r\n                </StyledTableCell>\r\n               \r\n                <br />\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  align=\"center\"\r\n                  onClick={() => {\r\n                    deleteCategory(row.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  // onClick={handleClickk}\r\n                  onClick={(e) => {\r\n                    setIsUpdate(true);\r\n                    handleUpdate(row.id);\r\n                    handleClick(e);\r\n                  }}\r\n                >\r\n                  Update\r\n                </button>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ShowCategory;\r\n","C:\\Homework Coding\\fruit\\fruit_data\\src\\client\\Page\\ShowFruit.js",["128","129"],"C:\\Homework Coding\\week4\\src\\index.js",[],["130","131"],"C:\\Homework Coding\\week4\\src\\App.js",[],"C:\\Homework Coding\\week4\\src\\client\\Page\\ShowCategory.js",["132"],"C:\\Homework Coding\\week4\\src\\client\\Page\\ShowFruit.js",["133","134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":26},{"ruleId":"139","severity":1,"message":"143","line":8,"column":8,"nodeType":"141","messageId":"142","endLine":8,"endColumn":22},{"ruleId":"139","severity":1,"message":"144","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":16},{"ruleId":"139","severity":1,"message":"145","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":17},{"ruleId":"139","severity":1,"message":"146","line":72,"column":11,"nodeType":"141","messageId":"142","endLine":72,"endColumn":15},{"ruleId":"139","severity":1,"message":"147","line":17,"column":14,"nodeType":"141","messageId":"142","endLine":17,"endColumn":19},{"ruleId":"139","severity":1,"message":"144","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":16},{"ruleId":"139","severity":1,"message":"145","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":17},{"ruleId":"139","severity":1,"message":"147","line":7,"column":14,"nodeType":"141","messageId":"142","endLine":7,"endColumn":19},{"ruleId":"139","severity":1,"message":"146","line":8,"column":10,"nodeType":"141","messageId":"142","endLine":8,"endColumn":14},{"ruleId":"139","severity":1,"message":"148","line":8,"column":16,"nodeType":"141","messageId":"142","endLine":8,"endColumn":23},{"ruleId":"139","severity":1,"message":"149","line":9,"column":10,"nodeType":"141","messageId":"142","endLine":9,"endColumn":17},{"ruleId":"139","severity":1,"message":"150","line":9,"column":19,"nodeType":"141","messageId":"142","endLine":9,"endColumn":29},{"ruleId":"139","severity":1,"message":"151","line":10,"column":10,"nodeType":"141","messageId":"142","endLine":10,"endColumn":19},{"ruleId":"139","severity":1,"message":"152","line":10,"column":21,"nodeType":"141","messageId":"142","endLine":10,"endColumn":35},{"ruleId":"139","severity":1,"message":"153","line":12,"column":10,"nodeType":"141","messageId":"142","endLine":12,"endColumn":16},{"ruleId":"139","severity":1,"message":"154","line":12,"column":18,"nodeType":"141","messageId":"142","endLine":12,"endColumn":27},{"ruleId":"139","severity":1,"message":"155","line":14,"column":10,"nodeType":"141","messageId":"142","endLine":14,"endColumn":22},{"ruleId":"139","severity":1,"message":"156","line":14,"column":24,"nodeType":"141","messageId":"142","endLine":14,"endColumn":39},{"ruleId":"139","severity":1,"message":"157","line":16,"column":10,"nodeType":"141","messageId":"142","endLine":16,"endColumn":24},{"ruleId":"139","severity":1,"message":"158","line":16,"column":26,"nodeType":"141","messageId":"142","endLine":16,"endColumn":43},{"ruleId":"139","severity":1,"message":"147","line":19,"column":15,"nodeType":"141","messageId":"142","endLine":19,"endColumn":20},{"ruleId":"139","severity":1,"message":"144","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":16},{"ruleId":"139","severity":1,"message":"145","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":17},{"ruleId":"135","replacedBy":"159"},{"ruleId":"137","replacedBy":"160"},{"ruleId":"139","severity":1,"message":"147","line":19,"column":15,"nodeType":"141","messageId":"142","endLine":19,"endColumn":20},{"ruleId":"139","severity":1,"message":"147","line":17,"column":14,"nodeType":"141","messageId":"142","endLine":17,"endColumn":19},{"ruleId":"135","replacedBy":"161"},{"ruleId":"137","replacedBy":"162"},{"ruleId":"139","severity":1,"message":"147","line":17,"column":14,"nodeType":"141","messageId":"142","endLine":17,"endColumn":19},{"ruleId":"139","severity":1,"message":"147","line":19,"column":15,"nodeType":"141","messageId":"142","endLine":19,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":129,"column":2,"nodeType":"165","messageId":"166","endLine":136,"endColumn":4},{"ruleId":"135","replacedBy":"167"},{"ruleId":"137","replacedBy":"168"},{"ruleId":"139","severity":1,"message":"147","line":17,"column":14,"nodeType":"141","messageId":"142","endLine":17,"endColumn":19},{"ruleId":"139","severity":1,"message":"147","line":19,"column":15,"nodeType":"141","messageId":"142","endLine":19,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":129,"column":2,"nodeType":"165","messageId":"166","endLine":136,"endColumn":4},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'UpdateStudentError' is defined but never used.","Identifier","unusedVar","'UpdateTeacherr' is defined but never used.","'MenuItem' is defined but never used.","'TextField' is defined but never used.","'name' is assigned a value but never used.","'setId' is assigned a value but never used.","'setName' is assigned a value but never used.","'subject' is assigned a value but never used.","'setSubject' is assigned a value but never used.","'teacherId' is assigned a value but never used.","'setTeacherName' is assigned a value but never used.","'newAge' is assigned a value but never used.","'setNewAge' is assigned a value but never used.","'newTeacherId' is assigned a value but never used.","'setNewTeacherId' is assigned a value but never used.","'newStudentList' is assigned a value but never used.","'setNewStudentList' is assigned a value but never used.",["169"],["170"],["169"],["170"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["169"],["170"],"no-global-assign","no-unsafe-negation"]